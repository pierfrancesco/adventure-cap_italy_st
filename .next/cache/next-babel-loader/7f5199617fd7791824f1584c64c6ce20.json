{"ast":null,"code":"/* MODELS */\nimport Events from '../models/Events';\nimport Texts from '../models/Texts';\n/* CONTROLLERS */\n\nimport { updateMoney } from './PlayerManager';\nimport { buyBusinesses, updateBusinessLevel, updateBusinessManager, updateOnGoingTransaction } from './BusinessManager';\n/**\n *\n * @param business\n */\n\nconst actionBuyBusiness = business => {\n  const result = buyBusinesses(business);\n\n  if (result) {\n    window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n    return true;\n  } else {\n    // TODO: improve response\n    window.dispatchEvent(new CustomEvent(Events.OPEN_MODAL, {\n      detail: Texts.en.NO_MONEY\n    }));\n    return false;\n  }\n};\n/**\n *\n * @param newMoney\n * @param businessId\n */\n\n\nconst actionCollectMoney = (newMoney, businessId) => {\n  updateMoney(newMoney, businessId);\n  updateOnGoingTransaction(businessId, 0);\n  window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n  return true;\n};\n/**\n *\n * @param businessId\n * @returns {boolean}\n */\n\n\nconst actionBuyUpgrade = businessId => {\n  const result = updateBusinessLevel(businessId);\n\n  if (result) {\n    window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n    return true;\n  } else {\n    // TODO: improve response\n    window.dispatchEvent(new CustomEvent(Events.OPEN_MODAL, {\n      detail: Texts.en.NO_MONEY\n    }));\n    return false;\n  }\n};\n/**\n *\n * @param businessId\n * @returns {boolean}\n */\n\n\nconst actionBuyManager = businessId => {\n  const result = updateBusinessManager(businessId);\n\n  if (result) {\n    window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n    return true;\n  } else {\n    // TODO: improve response\n    window.dispatchEvent(new CustomEvent(Events.OPEN_MODAL, {\n      detail: Texts.en.NO_MONEY\n    }));\n    return false;\n  }\n};\n/**\n *\n * @param businessId\n * @param currentSeconds\n */\n\n\nconst actionUpdateOnGoingTransaction = (businessId, currentSeconds) => {\n  updateOnGoingTransaction(businessId, currentSeconds);\n  window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n  return true;\n};\n\nexport { actionBuyBusiness, actionCollectMoney, actionBuyUpgrade, actionBuyManager, actionUpdateOnGoingTransaction };","map":{"version":3,"sources":["/Users/pierfrancescodorsogna/Documents/PROJECTS/adventure-cap_italy_st/controllers/ActionsManager.js"],"names":["Events","Texts","updateMoney","buyBusinesses","updateBusinessLevel","updateBusinessManager","updateOnGoingTransaction","actionBuyBusiness","business","result","window","dispatchEvent","CustomEvent","UPDATE_REACT_STATE","OPEN_MODAL","detail","en","NO_MONEY","actionCollectMoney","newMoney","businessId","actionBuyUpgrade","actionBuyManager","actionUpdateOnGoingTransaction","currentSeconds"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA;;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SACEC,aADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,wBAJF,QAKO,mBALP;AAOA;AACA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,QAAMC,MAAM,GAAGN,aAAa,CAACK,QAAD,CAA5B;;AACA,MAAIC,MAAJ,EAAY;AACVC,IAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgBZ,MAAM,CAACa,kBAAvB,CAArB;AACA,WAAO,IAAP;AACD,GAHD,MAGO;AACL;AACAH,IAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgBZ,MAAM,CAACc,UAAvB,EAAmC;AAACC,MAAAA,MAAM,EAAEd,KAAK,CAACe,EAAN,CAASC;AAAlB,KAAnC,CAArB;AACA,WAAO,KAAP;AACD;AACF,CAVD;AAYA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AACnDlB,EAAAA,WAAW,CAACiB,QAAD,EAAWC,UAAX,CAAX;AACAd,EAAAA,wBAAwB,CAACc,UAAD,EAAa,CAAb,CAAxB;AACAV,EAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgBZ,MAAM,CAACa,kBAAvB,CAArB;AACA,SAAO,IAAP;AACD,CALD;AAOA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,gBAAgB,GAAID,UAAD,IAAgB;AACvC,QAAMX,MAAM,GAAGL,mBAAmB,CAACgB,UAAD,CAAlC;;AACA,MAAIX,MAAJ,EAAY;AACVC,IAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgBZ,MAAM,CAACa,kBAAvB,CAArB;AACA,WAAO,IAAP;AACD,GAHD,MAGO;AACL;AACAH,IAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgBZ,MAAM,CAACc,UAAvB,EAAmC;AAACC,MAAAA,MAAM,EAAEd,KAAK,CAACe,EAAN,CAASC;AAAlB,KAAnC,CAArB;AACA,WAAO,KAAP;AACD;AACF,CAVD;AAYA;AACA;AACA;AACA;AACA;;;AACA,MAAMK,gBAAgB,GAAIF,UAAD,IAAgB;AACvC,QAAMX,MAAM,GAAGJ,qBAAqB,CAACe,UAAD,CAApC;;AACA,MAAIX,MAAJ,EAAY;AACVC,IAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgBZ,MAAM,CAACa,kBAAvB,CAArB;AACA,WAAO,IAAP;AACD,GAHD,MAGO;AACL;AACAH,IAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgBZ,MAAM,CAACc,UAAvB,EAAmC;AAACC,MAAAA,MAAM,EAAEd,KAAK,CAACe,EAAN,CAASC;AAAlB,KAAnC,CAArB;AACA,WAAO,KAAP;AACD;AACF,CAVD;AAYA;AACA;AACA;AACA;AACA;;;AACA,MAAMM,8BAA8B,GAAG,CAACH,UAAD,EAAaI,cAAb,KAAgC;AACrElB,EAAAA,wBAAwB,CAACc,UAAD,EAAaI,cAAb,CAAxB;AACAd,EAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgBZ,MAAM,CAACa,kBAAvB,CAArB;AACA,SAAO,IAAP;AACD,CAJD;;AAMA,SACEN,iBADF,EAEEW,kBAFF,EAGEG,gBAHF,EAIEC,gBAJF,EAKEC,8BALF","sourcesContent":["/* MODELS */\nimport Events from '../models/Events';\nimport Texts from '../models/Texts';\n\n/* CONTROLLERS */\nimport { updateMoney } from './PlayerManager';\nimport {\n  buyBusinesses,\n  updateBusinessLevel,\n  updateBusinessManager,\n  updateOnGoingTransaction\n} from './BusinessManager'\n\n/**\n *\n * @param business\n */\nconst actionBuyBusiness = (business) => {\n  const result = buyBusinesses(business);\n  if (result) {\n    window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n    return true\n  } else {\n    // TODO: improve response\n    window.dispatchEvent(new CustomEvent(Events.OPEN_MODAL, {detail: Texts.en.NO_MONEY}));\n    return false\n  }\n}\n\n/**\n *\n * @param newMoney\n * @param businessId\n */\nconst actionCollectMoney = (newMoney, businessId) => {\n  updateMoney(newMoney, businessId);\n  updateOnGoingTransaction(businessId, 0);\n  window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n  return true\n}\n\n/**\n *\n * @param businessId\n * @returns {boolean}\n */\nconst actionBuyUpgrade = (businessId) => {\n  const result = updateBusinessLevel(businessId);\n  if (result) {\n    window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n    return true\n  } else {\n    // TODO: improve response\n    window.dispatchEvent(new CustomEvent(Events.OPEN_MODAL, {detail: Texts.en.NO_MONEY}));\n    return false\n  }\n}\n\n/**\n *\n * @param businessId\n * @returns {boolean}\n */\nconst actionBuyManager = (businessId) => {\n  const result = updateBusinessManager(businessId)\n  if (result) {\n    window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n    return true\n  } else {\n    // TODO: improve response\n    window.dispatchEvent(new CustomEvent(Events.OPEN_MODAL, {detail: Texts.en.NO_MONEY}));\n    return false\n  }\n};\n\n/**\n *\n * @param businessId\n * @param currentSeconds\n */\nconst actionUpdateOnGoingTransaction = (businessId, currentSeconds) => {\n  updateOnGoingTransaction(businessId, currentSeconds);\n  window.dispatchEvent(new CustomEvent(Events.UPDATE_REACT_STATE));\n  return true;\n}\n\nexport {\n  actionBuyBusiness,\n  actionCollectMoney,\n  actionBuyUpgrade,\n  actionBuyManager,\n  actionUpdateOnGoingTransaction\n}\n"]},"metadata":{},"sourceType":"module"}