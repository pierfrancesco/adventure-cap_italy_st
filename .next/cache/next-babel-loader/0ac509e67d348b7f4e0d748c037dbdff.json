{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pierfrancescodorsogna/Documents/PROJECTS/adventure-cap_italy_st/components/BusinessesList/BusinessesList.js\";\n\n/* REACT */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './BusinessList.module.css';\n/* ELEMENTS */\n\nimport OwnedBusiness from '../../elements/OwnedBusiness';\nimport WannabeBusiness from '../../elements/WannabeBusiness';\n/* CONTROLLERS */\n\nimport { actionBuyBusiness, actionBuyUpgrade, actionCollectMoney, actionBuyManager, actionUpdateOnGoingTransaction } from '../../controllers/ActionsManager';\n/**\n * This component contains both owned and wannabe businesses\n * @param ownBusinesses\n * @param wannabeBusiness\n * @returns {*}\n * @constructor\n */\n\nconst BusinessesList = ({\n  ownBusinesses,\n  wannabeBusiness\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.BusinessList,\n    children: [ownBusinesses && ownBusinesses.sort((a, b) => a.INITIAL_COST > b.INITIAL_COST ? 1 : -1).map(elem => {\n      const revenueForThisBizAndLevel = elem.SINGLE_ITEM_PRICE * elem.CURRENT_LEVEL;\n      return /*#__PURE__*/_jsxDEV(OwnedBusiness, {\n        id: elem.ID,\n        name: elem.SCREEN_NAME,\n        level: elem.CURRENT_LEVEL,\n        hasManager: elem.HAS_MANAGER,\n        revenue: revenueForThisBizAndLevel,\n        collectMoney: () => actionCollectMoney(revenueForThisBizAndLevel, elem.ID),\n        secondsForGoodGeneration: elem.SECONDS_TO_DELIVER_GOOD,\n        managerCost: elem.MANAGER_COST,\n        upgradeCost: (elem.CURRENT_LEVEL + 1) * elem.INITIAL_COST,\n        upgradeBusiness: () => actionBuyUpgrade(elem.ID),\n        buyManager: () => actionBuyManager(elem.ID),\n        updateOnGoingTransaction: actionUpdateOnGoingTransaction,\n        img: `/static/images/businesses/${elem.ID}/main.png`,\n        oldSecondsToElapse: elem.LAST_ONGOING_SECONDS_TRANSACTION\n      }, \"OwnedBusiness\" + elem.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    }), wannabeBusiness && wannabeBusiness.map(elem => {\n      return /*#__PURE__*/_jsxDEV(WannabeBusiness, {\n        business: elem,\n        img: `/static/images/businesses/${elem.ID}/main.png`,\n        buyBusinessAction: () => actionBuyBusiness(elem)\n      }, \"WannabeBusiness\" + elem.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\nBusinessesList.propTypes = {\n  ownBusinesses: PropTypes.array.isRequired,\n  wannabeBusiness: PropTypes.array.isRequired\n};\nexport default BusinessesList;","map":{"version":3,"sources":["/Users/pierfrancescodorsogna/Documents/PROJECTS/adventure-cap_italy_st/components/BusinessesList/BusinessesList.js"],"names":["React","PropTypes","styles","OwnedBusiness","WannabeBusiness","actionBuyBusiness","actionBuyUpgrade","actionCollectMoney","actionBuyManager","actionUpdateOnGoingTransaction","BusinessesList","ownBusinesses","wannabeBusiness","BusinessList","sort","a","b","INITIAL_COST","map","elem","revenueForThisBizAndLevel","SINGLE_ITEM_PRICE","CURRENT_LEVEL","ID","SCREEN_NAME","HAS_MANAGER","SECONDS_TO_DELIVER_GOOD","MANAGER_COST","LAST_ONGOING_SECONDS_TRANSACTION","propTypes","array","isRequired"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA;;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA;;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,gBAJF,EAKEC,8BALF,QAMO,kCANP;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAAsC;AAC3D,sBAAO;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACW,YAAvB;AAAA,eAGJF,aAAa,IAAIA,aAAa,CAACG,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAAnB,GAAkC,CAAlC,GAAsC,CAAC,CAApE,EAAuEC,GAAvE,CAA2EC,IAAI,IAAI;AAEnG,YAAMC,yBAAyB,GAAGD,IAAI,CAACE,iBAAL,GAAyBF,IAAI,CAACG,aAAhE;AAEA,0BAAO,QAAC,aAAD;AAEL,QAAA,EAAE,EAAEH,IAAI,CAACI,EAFJ;AAGL,QAAA,IAAI,EAAEJ,IAAI,CAACK,WAHN;AAIL,QAAA,KAAK,EAAEL,IAAI,CAACG,aAJP;AAKL,QAAA,UAAU,EAAEH,IAAI,CAACM,WALZ;AAML,QAAA,OAAO,EAAEL,yBANJ;AAOL,QAAA,YAAY,EAAE,MAAMb,kBAAkB,CAACa,yBAAD,EAA4BD,IAAI,CAACI,EAAjC,CAPjC;AAQL,QAAA,wBAAwB,EAAEJ,IAAI,CAACO,uBAR1B;AASL,QAAA,WAAW,EAAEP,IAAI,CAACQ,YATb;AAUL,QAAA,WAAW,EAAE,CAACR,IAAI,CAACG,aAAL,GAAqB,CAAtB,IAA2BH,IAAI,CAACF,YAVxC;AAWL,QAAA,eAAe,EAAE,MAAMX,gBAAgB,CAACa,IAAI,CAACI,EAAN,CAXlC;AAYL,QAAA,UAAU,EAAE,MAAMf,gBAAgB,CAACW,IAAI,CAACI,EAAN,CAZ7B;AAaL,QAAA,wBAAwB,EAAEd,8BAbrB;AAcL,QAAA,GAAG,EAAG,6BAA4BU,IAAI,CAACI,EAAG,WAdrC;AAeL,QAAA,kBAAkB,EAAEJ,IAAI,CAACS;AAfpB,SACA,kBAAkBT,IAAI,CAACI,EADvB;AAAA;AAAA;AAAA;AAAA,cAAP;AAiBD,KArBiB,CAHb,EA2BJX,eAAe,IAAIA,eAAe,CAACM,GAAhB,CAAoBC,IAAI,IAAI;AAC9C,0BAAO,QAAC,eAAD;AAEL,QAAA,QAAQ,EAAEA,IAFL;AAEW,QAAA,GAAG,EAAG,6BAA4BA,IAAI,CAACI,EAAG,WAFrD;AAGL,QAAA,iBAAiB,EAAE,MAAMlB,iBAAiB,CAACc,IAAD;AAHrC,SACA,oBAAoBA,IAAI,CAACI,EADzB;AAAA;AAAA;AAAA;AAAA,cAAP;AAKD,KANmB,CA3Bf;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAmCD,CApCD;;AAsCAb,cAAc,CAACmB,SAAf,GAA2B;AACzBlB,EAAAA,aAAa,EAAEV,SAAS,CAAC6B,KAAV,CAAgBC,UADN;AAEzBnB,EAAAA,eAAe,EAAEX,SAAS,CAAC6B,KAAV,CAAgBC;AAFR,CAA3B;AAKA,eAAerB,cAAf","sourcesContent":["/* REACT */\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport styles from './BusinessList.module.css';\n\n/* ELEMENTS */\nimport OwnedBusiness from '../../elements/OwnedBusiness'\nimport WannabeBusiness from '../../elements/WannabeBusiness';\n\n/* CONTROLLERS */\nimport {\n  actionBuyBusiness,\n  actionBuyUpgrade,\n  actionCollectMoney,\n  actionBuyManager,\n  actionUpdateOnGoingTransaction\n} from '../../controllers/ActionsManager'\n\n/**\n * This component contains both owned and wannabe businesses\n * @param ownBusinesses\n * @param wannabeBusiness\n * @returns {*}\n * @constructor\n */\nconst BusinessesList = ({ownBusinesses, wannabeBusiness}) => {\n  return <div className={styles.BusinessList}>\n\n    {/* GENERATE OWNED BUSINESSES*/}\n    {ownBusinesses && ownBusinesses.sort((a, b) => a.INITIAL_COST > b.INITIAL_COST ? 1 : -1).map(elem => {\n\n      const revenueForThisBizAndLevel = elem.SINGLE_ITEM_PRICE * elem.CURRENT_LEVEL;\n\n      return <OwnedBusiness\n        key={\"OwnedBusiness\" + elem.ID}\n        id={elem.ID}\n        name={elem.SCREEN_NAME}\n        level={elem.CURRENT_LEVEL}\n        hasManager={elem.HAS_MANAGER}\n        revenue={revenueForThisBizAndLevel}\n        collectMoney={() => actionCollectMoney(revenueForThisBizAndLevel, elem.ID)}\n        secondsForGoodGeneration={elem.SECONDS_TO_DELIVER_GOOD}\n        managerCost={elem.MANAGER_COST}\n        upgradeCost={(elem.CURRENT_LEVEL + 1) * elem.INITIAL_COST}\n        upgradeBusiness={() => actionBuyUpgrade(elem.ID)}\n        buyManager={() => actionBuyManager(elem.ID)}\n        updateOnGoingTransaction={actionUpdateOnGoingTransaction}\n        img={`/static/images/businesses/${elem.ID}/main.png`}\n        oldSecondsToElapse={elem.LAST_ONGOING_SECONDS_TRANSACTION}\n      />\n    })}\n\n    {/* GENERATE WANNABE BUSINESSES*/}\n    {wannabeBusiness && wannabeBusiness.map(elem => {\n      return <WannabeBusiness\n        key={\"WannabeBusiness\" + elem.ID}\n        business={elem} img={`/static/images/businesses/${elem.ID}/main.png`}\n        buyBusinessAction={() => actionBuyBusiness(elem)}\n      />\n    })}\n  </div>\n};\n\nBusinessesList.propTypes = {\n  ownBusinesses: PropTypes.array.isRequired,\n  wannabeBusiness: PropTypes.array.isRequired,\n};\n\nexport default BusinessesList;\n"]},"metadata":{},"sourceType":"module"}