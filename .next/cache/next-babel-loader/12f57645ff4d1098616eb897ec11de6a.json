{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pierfrancescodorsogna/Documents/PROJECTS/adventure-cap_italy_st/elements/OwnedBusiness/OwnedBusiness.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './OwnedBusiness.module.css';\n/* MODELS */\n\nimport Texts from '../../models/Texts';\n/* ELEMENTS */\n\nimport Button from '../Button';\nimport PropTypes from 'prop-types';\nimport { allFirstCharsCapital } from '../../controllers/UtilsManager';\n/**\n *\n * @param id\n * @param name\n * @param level\n * @param hasManager\n * @param secondsForGoodGeneration\n * @param revenue\n * @param collectMoney\n * @param upgradeCost\n * @param upgradeBusiness\n * @param managerCost\n * @param buyManager\n * @param updateOnGoingTransaction\n * @param img\n * @param oldSecondsToElapse\n * @returns {*}\n * @constructor\n */\n\nvar OwnedBusiness = function OwnedBusiness(_ref) {\n  _s();\n\n  var id = _ref.id,\n      name = _ref.name,\n      level = _ref.level,\n      hasManager = _ref.hasManager,\n      secondsForGoodGeneration = _ref.secondsForGoodGeneration,\n      revenue = _ref.revenue,\n      collectMoney = _ref.collectMoney,\n      upgradeCost = _ref.upgradeCost,\n      upgradeBusiness = _ref.upgradeBusiness,\n      managerCost = _ref.managerCost,\n      buyManager = _ref.buyManager,\n      updateOnGoingTransaction = _ref.updateOnGoingTransaction,\n      img = _ref.img,\n      oldSecondsToElapse = _ref.oldSecondsToElapse;\n\n  var _useState = useState(hasManager),\n      isDisabled = _useState[0],\n      setIsDisabled = _useState[1];\n\n  var _useState2 = useState(hasManager),\n      manager = _useState2[0],\n      setManager = _useState2[1];\n\n  var _useState3 = useState(oldSecondsToElapse / secondsForGoodGeneration / 2 * 100),\n      progress = _useState3[0],\n      setProgress = _useState3[1];\n\n  var collectHelper = function collectHelper() {\n    // collect money and disable button for secondsForGoodGeneration\n    collectMoney();\n    setIsDisabled(true); // prepare business to collect another one meanwhile fill the progress bar\n\n    var currentProgress = progress;\n    var intervalToProgress = setInterval(function () {\n      currentProgress += 0.5 / secondsForGoodGeneration * 100;\n      setProgress(currentProgress);\n      updateOnGoingTransaction(id, currentProgress / 100 * secondsForGoodGeneration * 2);\n\n      if (currentProgress > 100) {\n        clearInterval(intervalToProgress);\n        setIsDisabled(false);\n        setProgress(0);\n        updateOnGoingTransaction(id, 0);\n      }\n    }, 500);\n  };\n\n  var managerHelper = function managerHelper() {\n    if (buyManager()) {\n      setManager(true);\n    }\n  }; // once the business is render\n\n\n  useEffect(function () {\n    var updateOnGoingTransactionTimer;\n\n    if (manager) {\n      var currentProgress = progress;\n      updateOnGoingTransactionTimer = setInterval(function () {\n        currentProgress += 0.5 / secondsForGoodGeneration * 100;\n        updateOnGoingTransaction(id, currentProgress / 100 * secondsForGoodGeneration * 2);\n        setProgress(currentProgress);\n\n        if (currentProgress > 100) {\n          collectMoney();\n          updateOnGoingTransaction(id, 0);\n          currentProgress = 0;\n          setProgress(currentProgress);\n        }\n      }, 500);\n    } else {\n      if (progress !== 0) collectHelper();\n    }\n\n    return function () {\n      clearInterval(updateOnGoingTransactionTimer);\n    };\n  }, [manager]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.businessCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.businessCardHead,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: \"Img for: \".concat(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, _this), \" \", allFirstCharsCapital(Texts.en.LEVEL), \" \", level, \" / 200 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.businessCardBody,\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        className: styles.progress,\n        max: \"100\",\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [hasManager ? null : /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isDisabled,\n          onClick: collectHelper,\n          children: [allFirstCharsCapital(Texts.en.COLLECT), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, _this), \" +$\", revenue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: upgradeBusiness,\n          children: [allFirstCharsCapital(Texts.en.UPGRADE), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 86\n          }, _this), \" \", upgradeCost, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this), hasManager ? null : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: managerHelper,\n          children: [allFirstCharsCapital(Texts.en.BUY_MANAGER), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 90\n          }, _this), \" \", managerCost, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, _this)]\n  }, \"elem-bought-\" + id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(OwnedBusiness, \"ljt3hWZlxjy8p4pRb/CwIN0044M=\");\n\n_c = OwnedBusiness;\nOwnedBusiness.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n  hasManager: PropTypes.bool.isRequired,\n  secondsForGoodGeneration: PropTypes.number.isRequired,\n  revenue: PropTypes.number.isRequired,\n  collectMoney: PropTypes.func.isRequired,\n  upgradeCost: PropTypes.func.isRequired,\n  upgradeBusines: PropTypes.func.isRequired,\n  managerCost: PropTypes.number.isRequired,\n  buyManager: PropTypes.func.isRequired,\n  updateOnGoingTransaction: PropTypes.func.isRequired,\n  img: PropTypes.string.isRequired,\n  oldSecondsToElapse: PropTypes.number\n};\nexport default OwnedBusiness;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnedBusiness\");","map":{"version":3,"sources":["/Users/pierfrancescodorsogna/Documents/PROJECTS/adventure-cap_italy_st/elements/OwnedBusiness/OwnedBusiness.js"],"names":["React","useState","useEffect","styles","Texts","Button","PropTypes","allFirstCharsCapital","OwnedBusiness","id","name","level","hasManager","secondsForGoodGeneration","revenue","collectMoney","upgradeCost","upgradeBusiness","managerCost","buyManager","updateOnGoingTransaction","img","oldSecondsToElapse","isDisabled","setIsDisabled","manager","setManager","progress","setProgress","collectHelper","currentProgress","intervalToProgress","setInterval","clearInterval","managerHelper","updateOnGoingTransactionTimer","businessCard","businessCardHead","en","LEVEL","businessCardBody","COLLECT","UPGRADE","BUY_MANAGER","propTypes","string","isRequired","number","bool","func","upgradeBusines"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './OwnedBusiness.module.css';\n\n/* MODELS */\nimport Texts from '../../models/Texts';\n\n/* ELEMENTS */\nimport Button from '../Button';\nimport PropTypes from 'prop-types'\nimport { allFirstCharsCapital } from '../../controllers/UtilsManager'\n\n/**\n *\n * @param id\n * @param name\n * @param level\n * @param hasManager\n * @param secondsForGoodGeneration\n * @param revenue\n * @param collectMoney\n * @param upgradeCost\n * @param upgradeBusiness\n * @param managerCost\n * @param buyManager\n * @param updateOnGoingTransaction\n * @param img\n * @param oldSecondsToElapse\n * @returns {*}\n * @constructor\n */\nconst OwnedBusiness =\n  ({\n     id,\n     name,\n     level,\n     hasManager,\n     secondsForGoodGeneration,\n     revenue,\n     collectMoney,\n     upgradeCost,\n     upgradeBusiness,\n     managerCost,\n     buyManager,\n     updateOnGoingTransaction,\n     img,\n     oldSecondsToElapse\n   }) => {\n\n    const [isDisabled, setIsDisabled] = useState(hasManager);\n    const [manager, setManager] = useState(hasManager);\n    const [progress, setProgress] = useState(((oldSecondsToElapse / secondsForGoodGeneration) / 2) * 100);\n\n    const collectHelper = () => {\n\n      // collect money and disable button for secondsForGoodGeneration\n      collectMoney();\n      setIsDisabled(true);\n\n      // prepare business to collect another one meanwhile fill the progress bar\n      let currentProgress = progress;\n      const intervalToProgress = setInterval(() => {\n        currentProgress += (0.5 / secondsForGoodGeneration) * 100;\n        setProgress(currentProgress)\n        updateOnGoingTransaction(id, (currentProgress / 100) * secondsForGoodGeneration * 2);\n\n        if (currentProgress > 100) {\n          clearInterval(intervalToProgress);\n          setIsDisabled(false);\n          setProgress(0);\n          updateOnGoingTransaction(id, 0);\n        }\n      }, 500);\n    }\n\n    const managerHelper = () => {\n      if (buyManager()) {\n        setManager(true);\n      }\n    }\n\n    // once the business is render\n\n    useEffect(() => {\n      let updateOnGoingTransactionTimer;\n\n      if (manager) {\n        let currentProgress = progress;\n        updateOnGoingTransactionTimer = setInterval(() => {\n          currentProgress += (0.5 / secondsForGoodGeneration) * 100;\n          updateOnGoingTransaction(id, (currentProgress / 100) * secondsForGoodGeneration * 2);\n          setProgress(currentProgress);\n          if (currentProgress > 100) {\n            collectMoney();\n            updateOnGoingTransaction(id, 0);\n            currentProgress = 0;\n            setProgress(currentProgress);\n          }\n        }, 500)\n      } else {\n        if (progress !== 0) collectHelper()\n      }\n\n      return () => {\n        clearInterval(updateOnGoingTransactionTimer);\n      }\n    }, [manager])\n\n    return <div key={\"elem-bought-\" + id} className={styles.businessCard}>\n      {/*Business Head*/}\n      <div className={styles.businessCardHead}>\n        <div>\n          {/*Profile Pic*/}\n          <img src={img} alt={`Img for: ${id}`}/>\n        </div>\n        <div>\n          {/*Biz Name & Level*/}\n          <p>{name} <br/> {allFirstCharsCapital(Texts.en.LEVEL)} {level} / 200 </p>\n        </div>\n      </div>\n      {/*Business Body*/}\n      <div className={styles.businessCardBody}>\n        {/*Progress Bar*/}\n        <progress className={styles.progress} max=\"100\" value={progress}/>\n        {/*Button Container*/}\n        <div>\n          {/*Collect Button*/}\n          {hasManager ? null :\n            <Button disabled={isDisabled} onClick={collectHelper}>{allFirstCharsCapital(Texts.en.COLLECT)}\n              <br/> +${revenue}</Button>}\n          {/*Upgrade Button*/}\n          <Button onClick={upgradeBusiness}>{allFirstCharsCapital(Texts.en.UPGRADE)} <br/> {upgradeCost}$</Button>\n          {/*Buy Manager Button*/}\n          {hasManager ? null :\n            <Button onClick={managerHelper}>{allFirstCharsCapital(Texts.en.BUY_MANAGER)} <br/> {managerCost}$</Button>}\n        </div>\n      </div>\n    </div>\n  };\n\nOwnedBusiness.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n  hasManager: PropTypes.bool.isRequired,\n  secondsForGoodGeneration: PropTypes.number.isRequired,\n  revenue: PropTypes.number.isRequired,\n  collectMoney: PropTypes.func.isRequired,\n  upgradeCost: PropTypes.func.isRequired,\n  upgradeBusines: PropTypes.func.isRequired,\n  managerCost: PropTypes.number.isRequired,\n  buyManager: PropTypes.func.isRequired,\n  updateOnGoingTransaction: PropTypes.func.isRequired,\n  img: PropTypes.string.isRequired,\n  oldSecondsToElapse: PropTypes.number,\n}\n\nexport default OwnedBusiness;\n"]},"metadata":{},"sourceType":"module"}